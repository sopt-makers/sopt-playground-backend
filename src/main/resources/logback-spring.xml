<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- 로그파일 경로 -->
    <property name="LOG_PATH" value="./logs"/>

    <!-- 로그 패턴 정의: 시간, 로그 레벨, 스레드, 클래스, requestId, 메시지 -->
    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} [%X{requestId}] - %msg%n"/>

    <!-- 콘솔 출력 설정 (개발 환경 확인용> -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- request 로그 파일 설정 -->
    <appender name="REQUEST_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 현재 사용 중인 로그 파일 경로 -->
        <file>${LOG_PATH}/request.log</file>

        <!-- 파일 롤링 정책: 월별로 새 파일 생성 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 롤링된 파일 이름 패턴: request-2025-01.log -->
            <fileNamePattern>${LOG_PATH}/request-%d{yyyy-MM}.log</fileNamePattern>
            <!-- 최대 12개월치 보관 (1년) -->
            <maxHistory>12</maxHistory>
        </rollingPolicy>

        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>

        <!-- REQUEST 로거에서 온 로그만 기록 -->
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
                <marker>REQUEST</marker>
            </evaluator>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- RESPONSE 로그 파일 설정 -->
    <appender name="RESPONSE_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/response.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/response-%d{yyyy-MM}.log</fileNamePattern>
            <maxHistory>12</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
                <marker>RESPONSE</marker>
            </evaluator>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- ERROR 로그 파일 설정 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/error-%d{yyyy-MM}.log</fileNamePattern>
            <maxHistory>12</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
                <marker>ERROR</marker>
            </evaluator>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 로거 설정: INFO 레벨 이상만 기록 -->
    <logger name="org.sopt.makers.internal" level="INFO"/>

    <!-- Lambda 환경: 콘솔 로깅만 사용 (CloudWatch Logs로 자동 수집) -->
    <springProfile name="lambda-dev,lambda-prod">
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
        </root>
    </springProfile>

    <!-- 로컬/일반 환경: 콘솔 + 파일 로깅 사용 -->
    <springProfile name="!lambda-dev &amp; !lambda-prod">
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="REQUEST_FILE"/>
            <appender-ref ref="RESPONSE_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
        </root>
    </springProfile>
</configuration>