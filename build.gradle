plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
}

group = 'org.sopt.makers'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

def queryDslVersion = "5.0.0"
def mapstructVersion = "1.5.2.Final"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.4")
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-aop"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-mail"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j"
	implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
	implementation 'com.squareup.okhttp3:okhttp:4.9.3'
	implementation 'com.google.code.gson:gson:2.9.0'
	implementation "org.springdoc:springdoc-openapi-ui:1.6.11"
	implementation 'com.bucket4j:bucket4j-core:8.4.0'
	implementation 'net.minidev:json-smart'

	// log
	implementation 'net.logstash.logback:logstash-logback-encoder:7.3'

	// Postgresql Array type
	implementation('com.vladmihalcea:hibernate-types-52:2.19.2')

	// S3
	implementation('software.amazon.awssdk:s3:2.17.285')

	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.2"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.2"
	implementation("com.nimbusds:nimbus-jose-jwt:9.37.3")

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
	testCompileOnly "org.projectlombok:lombok"
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Mapstruct
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	// QueryDsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Slack
	implementation 'com.slack.api:slack-api-client:1.41.0'

	// Prometheus
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// Local Cache
	implementation "com.github.ben-manes.caffeine:caffeine:3.1.6"

	// Google Service
	implementation 'com.google.apis:google-api-services-sheets:v4-rev516-1.23.0'
	implementation 'com.google.auth:google-auth-library-oauth2-http:0.20.0'

	// Web Client
	implementation("org.springframework.boot:spring-boot-starter-webflux")

	// Mac M1/M2 ARM 환경에서 Netty DNS Resolver
	implementation "io.netty:netty-resolver-dns-native-macos:4.1.82.Final:osx-aarch_64"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
